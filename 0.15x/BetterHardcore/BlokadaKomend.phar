<?php __HALT_COMPILER(); ?>
†                    .gitattributesz  ñŠWz  ö¾óô¶      
   plugin.yml
  ñŠW
  PUi¶      ,   src/Vaivez66/BlockCmdPE/BlockCmdListener.php  ñŠW  ÿ9J“¶      *   src/Vaivez66/BlockCmdPE/BlockCmdFormat.php!  ñŠW!  Os³ ¶      $   src/Vaivez66/BlockCmdPE/BlockCmd.phpâ  ñŠWâ  ÚëE¶         resources/config.yml   ñŠW   ¶ìÕ“¶      
   .gitignore‰  ñŠW‰  ÒÐc¶      # Auto detect text files and perform LF normalization
* text=auto

# Custom for Visual Studio
*.cs     diff=csharp

# Standard to msysgit
*.doc	 diff=astextplain
*.DOC	 diff=astextplain
*.docx diff=astextplain
*.DOCX diff=astextplain
*.dot  diff=astextplain
*.DOT  diff=astextplain
*.pdf  diff=astextplain
*.PDF	 diff=astextplain
*.rtf	 diff=astextplain
*.RTF	 diff=astextplain
name: BlockCmdPE
main: Vaivez66\BlockCmdPE\BlockCmd
version: 1.0.0
api: [1.12.0, 2.0.0]
load: POSTWORLD
authors: [Vaivez66]
description: "Block some commands!"
permissions:
  block.cmd.pe.bypass:
    description: 'Permission to bypass from blocking'
    default: op
<?php
/**
 * Created by PhpStorm.
 * User: ASUS
 * Date: 15/02/2016
 * Time: 9:52
 */
namespace Vaivez66\BlockCmdPE;

use pocketmine\event\Listener;
use pocketmine\event\player\PlayerCommandPreprocessEvent;

class BlockCmdListener implements Listener{

    public function __construct(BlockCmd $plugin){
        $this->plugin = $plugin;
    }

    public function onCmd(PlayerCommandPreprocessEvent $event){
        $p = $event->getPlayer();
        $msg = $event->getMessage();
        if($p->hasPermission('block.cmd.pe.bypass')){
            return;
        }
        foreach($this->plugin->getCmd() as $cmd){
            if(stripos($msg, $cmd) === 0){
                $event->setCancelled(true);
                $p->sendMessage($this->plugin->getMsg());
            }
        }
    }

}
<?php
/**
 * Created by PhpStorm.
 * User: ASUS
 * Date: 15/02/2016
 * Time: 10:16
 */
namespace Vaivez66\BlockCmdPE;

use pocketmine\utils\TextFormat as TF;

class BlockCmdFormat{

    public function __construct(BlockCmd $plugin){
        $this->plugin = $plugin;
    }

    public function translate($m){
        $m = str_replace("{BLACK}", TF::BLACK, $m);
        $m = str_replace("{DARK_BLUE}", TF::DARK_BLUE, $m);
        $m = str_replace("{DARK_GREEN}", TF::DARK_GREEN, $m);
        $m = str_replace("{DARK_AQUA}", TF::DARK_AQUA, $m);
        $m = str_replace("{DARK_RED}", TF::DARK_RED, $m);
        $m = str_replace("{DARK_GRAY}", TF::DARK_GRAY, $m);
        $m = str_replace("{DARK_PURPLE}", TF::DARK_PURPLE, $m);
        $m = str_replace("{LIGHT_PURPLE}", TF::LIGHT_PURPLE, $m);
        $m = str_replace("{GRAY}", TF::GRAY, $m);
        $m = str_replace("{GOLD}", TF::GOLD, $m);
        $m = str_replace("{BLUE}", TF::BLUE, $m);
        $m = str_replace("{GREEN}", TF::GREEN, $m);
        $m = str_replace("{AQUA}", TF::AQUA, $m);
        $m = str_replace("{RED}", TF::RED, $m);
        $m = str_replace("{YELLOW}", TF::YELLOW, $m);
        $m = str_replace("{WHITE}", TF::WHITE, $m);
        $m = str_replace("{OBFUSCATED}", TF::OBFUSCATED, $m);
        $m = str_replace("{BOLD}", TF::BOLD, $m);
        $m = str_replace("{STRIKETHROUGH}", TF::STRIKETHROUGH, $m);
        $m = str_replace("{UNDERLINE}", TF::UNDERLINE, $m);
        $m = str_replace("{ITALIC}", TF::ITALIC, $m);
        $m = str_replace("{RESET}", TF::RESET, $m);
        return $m;
    }

}<?php
/**
 * Created by PhpStorm.
 * User: ASUS
 * Date: 15/02/2016
 * Time: 9:46
 */
namespace Vaivez66\BlockCmdPE;

use pocketmine\plugin\PluginBase;
use pocketmine\utils\Config;
use pocketmine\utils\TextFormat as TF;

class BlockCmd extends PluginBase{

    public $cfg;
    private $format;

    public function onEnable(){
        $this->saveDefaultConfig();
        $this->getServer()->getLogger()->info(TF::GREEN . 'BlockCmdPE is ready!');
        $this->getServer()->getPluginManager()->registerEvents(new BlockCmdListener($this), $this);
        $this->cfg = new Config($this->getDataFolder() . 'config.yml', Config::YAML, array());
        $this->format = new BlockCmdFormat($this);
    }

    /**
     * @return array
     */

    public function getCmd(){
        return (array)$this->cfg->get('block.cmd');
    }

    /**
     * @return mixed
     */

    public function getMsg(){
        $m = $this->cfg->get('block.message');
        $m = $this->getFormat()->translate($m);
        return $m;
    }

    /**
     * @return mixed
     */

    public function getFormat(){
        return $this->format;
    }

    public function onDisable(){
        $this->getServer()->getLogger()->info(TF::RED . 'BlockCmdPE was disabled!');
    }

}
# Message that will send if player execute blocked cmd
block.message: 'â€¢ {RED}Nie Mozesz Tego Zrobic ! Â§fâ€¢'
# Commands that will blocked
block.cmd:
  - '/pl'
  - '/me f*ck you steve'
  - '/kill steve'
  - '/kil'
  - '/me'
  - '/version'
# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msm
*.msp

# Windows shortcuts
*.lnk

# =========================
# Operating System Files
# =========================

# OSX
# =========================

.DS_Store
.AppleDouble
.LSOverride

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk
 àÖ^r˜#níüqÊýi~g   GBMB